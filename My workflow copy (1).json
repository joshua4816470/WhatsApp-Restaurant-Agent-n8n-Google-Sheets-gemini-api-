{
  "name": "My workflow copy",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages[0].text.body }}",
        "options": {
          "systemMessage": "You are a smart food ordering assistant for ‚ÄúJOSHUA Restaurant‚Äù.\n\nRules:\n\n1) When a user sends their first message (like hi/hello), reply with:\n   Welcome to Joshuas Restaurant! üçΩÔ∏è\n   How can I help you today?\n   ‚ñ´Ô∏è Place an order\n   ‚ñ´Ô∏è FAQ / Information\n   ‚ñ´Ô∏è Check order / stock\n   (Keep the tone friendly, like a food-delivery app.)\n\n2) If user wants *order*:\n   - Ask step by step: name, food item, quantity.\n   - Check the Inventory sheet before confirming.\n     ‚Ä¢ If available ‚Üí ‚ÄúYour order for *[item]* (x quantity) is confirmed ‚úÖ‚Äù\n     ‚Ä¢ If not available ‚Üí ‚ÄúSorry, *[item]* is out of stock ‚ùå. Available options: [list items]‚Äù\n   - Only confirmed orders go into the Orders sheet.\n   - In Orders sheet always include:\n     ‚Ä¢ Status = Confirmed / Rejected\n     ‚Ä¢ Description = ‚ÄúOrder accepted (item available)‚Äù OR ‚ÄúOrder rejected (out of stock)‚Äù\n\n3) If user wants *FAQ*:\n   - Answer short and clear (delivery time, payment methods, restaurant hours).\n\n4) If user wants *check order* or *check stock*:\n   - Ask for food name or order ID.\n   - Look up in Google Sheets (Orders / Inventory).\n     ‚Ä¢ If checking order ‚Üí reply with status (Confirmed / Rejected / Cancelled / Delivered).\n     ‚Ä¢ If checking stock ‚Üí reply with available quantity of that food.\n   - If asked, also list all *available* food items with quantity.\n\n5) If user wants *cancel order*:\n   - Reply politely:\n     ‚ÄúSorry üôè I cannot cancel orders directly.\n      Please call the restaurant owner first and inform them.\n      Owner Contact: +95 1224567890‚Äù\n\n6) Always reply in short text like a normal WhatsApp chat:\n   - Do not use **bold** or long paragraphs.\n   - Use *stars* only for light emphasis.\n   - Keep tone friendly, polite, and food-delivery app style.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -112,
        -144
      ],
      "id": "7c3e1f0c-05a4-485a-9632-1a6022da9290",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -224,
        112
      ],
      "id": "73505e1b-8c88-4cdd-82a9-30a18def95fa",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "zQ64xYRHoB9WCb7t",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WhatsApp Trigger').item.json.messages?.[0]?.from }}\n",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        128
      ],
      "id": "78d0df33-16cf-452b-b0cd-06a862c20f09",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1802440206,
          "mode": "list",
          "cachedResultName": "FAQ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk/edit#gid=1802440206"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        192,
        128
      ],
      "id": "ddcf23f8-77ed-4d78-b14e-4241ec2256e9",
      "name": "GET FAQ",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PjMi2XKl2IFmuxPZ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1739250362,
          "mode": "list",
          "cachedResultName": "Inventory",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk/edit#gid=1739250362"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        48,
        112
      ],
      "id": "f24292b7-7c12-40e2-89fe-0526ab65f1d1",
      "name": "INFO",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PjMi2XKl2IFmuxPZ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 99033552,
          "mode": "list",
          "cachedResultName": "Orders",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FPq6Rsmay2WZPHBYcCKiGaTRtU4stNXEt0Smqxtpclk/edit#gid=99033552"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Customer Name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Customer_Name', ``, 'string') }}",
            "Food Item": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Food_Item', ``, 'string') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "Quantity Ordered": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Quantity_Ordered', ``, 'string') }}",
            "Order Date": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Customer Name",
              "displayName": "Customer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Food Item",
              "displayName": "Food Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Quantity Ordered",
              "displayName": "Quantity Ordered",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Order Date",
              "displayName": "Order Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        320,
        80
      ],
      "id": "4f3e0fca-460a-4cc7-81ef-80ecb444f9d6",
      "name": "update",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PjMi2XKl2IFmuxPZ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -448,
        -128
      ],
      "id": "dba465ce-59c3-4ddf-af40-0a6274c30d41",
      "name": "WhatsApp Trigger",
      "webhookId": "748bb409-ac9a-456a-b940-7f287cc1acd3",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "uWWoBPiSLpJksCKB",
          "name": "WhatsApp OAuth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "765524689984439",
        "recipientPhoneNumber": "+61466216109",
        "textBody": "={{\n  $('AI Agent').item.json.output\n  ?? $('AI Agent').item.json.messages?.[0]?.content?.[0]?.text\n  ?? $('AI Agent').item.json.response\n  ?? $('AI Agent').item.json.result\n  ?? 'Sorry, I had trouble generating a reply. Please try again.'\n}}\n",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        304,
        -144
      ],
      "id": "45dc9fbb-8c28-4d98-baf2-222a696a7269",
      "name": "Send message",
      "webhookId": "f276927c-8807-4d16-85ad-2547182f1a97",
      "credentials": {
        "whatsAppApi": {
          "id": "qAX7JpGVvsDSWAtg",
          "name": "WhatsApp account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "GET FAQ": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "INFO": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3bfbe6d0-d7e9-4651-83b2-2db0b388cd18",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6364cede86800fe71a4a901fe25070731a46bcaafbcaae32ee96a991ffb27210"
  },
  "id": "eUCpPr5gRD0FyeBs",
  "tags": []
}